{"version":3,"sources":["assest/note.svg","assest/hashtag.svg","assest/star.svg","assest/delete.svg","assest/search.svg","assest/grid_selected.svg","assest/list_unselected.svg","assest/markstar.svg","components/FunctionBar.js","components/NoteItems.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FunctionBarWrapper","styled","ul","getRelIcon","index","Note","HashTag","Star","Delete","BarOptions","iconId","name","FunctionBar","options","selected","map","item","key","className","src","demoNoteItemArr","color","like","UlWrapper","Circle","div","props","NoteItems","data","obj","MarkStar","AppWrapper","SideBar","aside","NoteItemWrapper","SerachBar","DisplayWay","MainWrapper","App","Search","Grid_Selected","List_Unselected","style","margin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,wrBCO3C,IAAMC,EAAqBC,IAAOC,GAAV,KAoBxB,SAASC,EAAWC,GAChB,OAAQA,GACJ,KAAK,EACD,OAAOC,IACX,KAAK,EACD,OAAOC,IACX,KAAK,EACD,OAAOC,IACX,KAAK,EACD,OAAOC,KAIZ,IAAMC,EAAa,CACtB,CAAEC,OAAQ,EAAGC,KAAM,gBACnB,CAAED,OAAQ,EAAGC,KAAM,gBACnB,CAAED,OAAQ,EAAGC,KAAM,gBACnB,CAAED,OAAQ,EAAGC,KAAM,iBAGVC,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,SAClC,OACI,kBAACd,EAAD,KAEQa,EAAQE,KAAI,SAACC,EAAMZ,GACf,OACI,wBAAIa,IAAKb,EAAOc,UAAWJ,IAAaV,EAAQ,iBAAmB,MAC/D,yBAAKe,IAAKhB,EAAWa,EAAKN,UAC1B,8BAAOM,EAAKL,Y,uwBCnDjC,IAAMS,EAAkB,CAC3B,CAAEC,MAAO,UAAWV,KAAM,6BAAUW,MAAM,GAC1C,CAAED,MAAO,UAAWV,KAAM,6BAAUW,MAAM,GAC1C,CAAED,MAAO,UAAWV,KAAM,6BAAUW,MAAM,GAC1C,CAAED,MAAO,UAAWV,KAAM,6BAAUW,MAAM,GAC1C,CAAED,MAAO,UAAWV,KAAM,6BAAUW,MAAM,IAGxCC,EAAYtB,IAAOC,GAAV,KAwBTsB,EAASvB,IAAOwB,IAAV,KAIK,SAAAC,GAAK,OAAIA,EAAML,SAKnBM,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAqB,EAAfd,SAC9B,OACI,kBAACS,EAAD,KAEQK,EAAKb,KAAI,SAACc,EAAKzB,GACX,OACI,wBAAIa,IAAKb,GACL,8BACI,kBAACoB,EAAD,CAAQH,MAAOQ,EAAIR,QAClBQ,EAAIlB,MAET,8BACI,yBAAKQ,IAAKW,MACV,2D,i5BClDhC,IAAMC,EAAa9B,IAAOwB,IAAV,KAMVO,EAAU/B,IAAOgC,MAAV,KAMPC,EAAkBjC,IAAOwB,IAAV,KAQfU,EAAYlC,IAAOwB,IAAV,KAWTW,EAAanC,IAAOwB,IAAV,KAMVY,EAAcpC,IAAOwB,IAAV,KA+BFa,MAxBf,WACE,OACE,kBAACP,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAanB,QAASJ,EAAYK,SAAU,KAE9C,kBAACoB,EAAD,KACE,kBAACC,EAAD,KACE,gCACA,8BAAM,yBAAKhB,IAAKoB,QAElB,kBAACH,EAAD,KACE,yBAAKjB,IAAKqB,MACV,yBAAKrB,IAAKsB,OAEZ,kBAAC,EAAD,CAAWb,KAAMR,EAAiBN,SAAU,KAE9C,kBAACuB,EAAD,KACE,wBAAIK,MAAO,CAACC,OAAO,WAAnB,iBC1DYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.bbe85346.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/note.45ca0db7.svg\";","module.exports = __webpack_public_path__ + \"static/media/hashtag.ac8f0429.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.870d6eca.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.e77dcb42.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.05df976f.svg\";","module.exports = __webpack_public_path__ + \"static/media/grid_selected.8cfa9c9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/list_unselected.07c4446d.svg\";","module.exports = __webpack_public_path__ + \"static/media/markstar.b22a352d.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Note from '../assest/note.svg';\r\nimport HashTag from '../assest/hashtag.svg';\r\nimport Star from '../assest/star.svg';\r\nimport Delete from '../assest/delete.svg';\r\n\r\nconst FunctionBarWrapper = styled.ul`\r\n    margin-top:32px;  \r\n    padding: initial;\r\n    > li {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-content:center;\r\n        font-weight:bold;\r\n        margin-top: 10px;\r\n        padding: 5px;\r\n        align-items: center;\r\n    }\r\n    > li > span {\r\n        margin-left: 20px;\r\n    }\r\n    > .the-chosen-one {\r\n        background:#FFFFFF;\r\n    }\r\n`;\r\n\r\nfunction getRelIcon(index) {\r\n    switch (index) {\r\n        case 1:\r\n            return Note;\r\n        case 2:\r\n            return HashTag;\r\n        case 3:\r\n            return Star;\r\n        case 4:\r\n            return Delete;\r\n    }\r\n}\r\n\r\nexport const BarOptions = [\r\n    { iconId: 1, name: \"筆記\" },\r\n    { iconId: 2, name: \"標籤\" },\r\n    { iconId: 3, name: \"星號\" },\r\n    { iconId: 4, name: \"刪除\" },\r\n]\r\n\r\nexport const FunctionBar = ({ options,selected }) => {\r\n    return (\r\n        <FunctionBarWrapper>\r\n            {\r\n                options.map((item, index) => {\r\n                    return (\r\n                        <li key={index} className={selected === index ? 'the-chosen-one' : null}>\r\n                            <img src={getRelIcon(item.iconId)} />\r\n                            <span>{item.name}</span>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </FunctionBarWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MarkStar from '../assest/markstar.svg';\r\n\r\nexport const demoNoteItemArr = [\r\n    { color: '#FCA1A1', name: '演講筆記_1', like: true },\r\n    { color: '#93C8E0', name: '演講筆記_2', like: false },\r\n    { color: '#699186', name: '演講筆記_3', like: false },\r\n    { color: '#FCA1A1', name: '演講筆記_4', like: false },\r\n    { color: '#835C50', name: '演講筆記_5', like: false },\r\n]\r\n\r\nconst UlWrapper = styled.ul`\r\n    margin-top:-15px;\r\n    padding:initial;\r\n    > li {\r\n        display:flex;\r\n        justify-content:space-between;\r\n        margin-top: 10px;\r\n        padding: 5px;\r\n        margin-left:15px;\r\n        margin-right:15px;\r\n    }\r\n    > li span {\r\n        display:flex;\r\n        align-items:center;\r\n        font-weight:bold;\r\n        span:last-child {\r\n            color:#B2B2B2;\r\n        }\r\n    }\r\n    > .the-chosen-one {\r\n        background:#FFFFFF;\r\n    }\r\n`;\r\n\r\nconst Circle = styled.div`\r\n    width:15px;\r\n    height:15px;\r\n    border-radius:50%;\r\n    background:${props => props.color};\r\n    margin-right:5px;\r\n`;\r\n\r\n\r\nexport const NoteItems = ({ data, selected }) => {\r\n    return (\r\n        <UlWrapper>\r\n            {\r\n                data.map((obj, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <span>\r\n                                <Circle color={obj.color} />\r\n                                {obj.name}\r\n                            </span>\r\n                            <span>\r\n                                <img src={MarkStar} />\r\n                                <span>．．．</span>\r\n                            </span>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </UlWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nimport { FunctionBar, BarOptions } from './components/FunctionBar';\r\nimport Search from './assest/search.svg';\r\nimport Grid_Selected from './assest/grid_selected.svg';\r\nimport List_Unselected from './assest/list_unselected.svg';\r\nimport { NoteItems, demoNoteItemArr } from './components/NoteItems';\r\nconst AppWrapper = styled.div`\r\n  display:flex;\r\n  height:100%;\r\n  width:100%;\r\n`;\r\n\r\nconst SideBar = styled.aside`\r\n  height:100vh;\r\n  background:#D0D5D9;\r\n  width:15vw;\r\n`;\r\n\r\nconst NoteItemWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  background:#E7ECF1;\r\n  align-content:flex-start;\r\n  width:20vw;\r\n`;\r\n\r\nconst SerachBar = styled.div`\r\n  display:flex;\r\n  width:150px;\r\n  margin:0 auto;\r\n  margin-top:32px;\r\n  border:1px solid #FFFFFF;\r\n  > input {\r\n    background:#FFFFFF;\r\n  }\r\n`;\r\n\r\nconst DisplayWay = styled.div`\r\n  display:flex;\r\n  width:100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst MainWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  background:#FFFFFF;\r\n  width:65vw;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <AppWrapper>\r\n      <SideBar>\r\n        <FunctionBar options={BarOptions} selected={0}/>\r\n      </SideBar>\r\n      <NoteItemWrapper>\r\n        <SerachBar>\r\n          <input />\r\n          <span><img src={Search} /></span>\r\n        </SerachBar>\r\n        <DisplayWay>\r\n          <img src={Grid_Selected} />\r\n          <img src={List_Unselected} />\r\n        </DisplayWay>\r\n        <NoteItems data={demoNoteItemArr} selected={0} />\r\n      </NoteItemWrapper>\r\n      <MainWrapper>\r\n        <h1 style={{margin:'0 auto'}}>To be done</h1>\r\n      </MainWrapper>\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}